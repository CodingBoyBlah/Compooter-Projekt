# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'loginUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5.QtWidgets import QMainWindow, QApplication, QLabel, QPushButton, QLineEdit, QDialog, QMessageBox
from PyQt5 import QtWidgets
from PyQt5 import uic
from pathlib import Path
from signup_code import Ui_SignupWindow
from main_window import Ui_MainWindow

import mysql.connector as mys
mycon = mys.connect(host = 'localhost', user = 'root', password = 'slay', database = 'torquecart')
mycur = mycon.cursor()

loggedInUserMailId = "abc"

class Ui_LoginWindow(QDialog):
    def __init__(self):
        super(Ui_LoginWindow, self).__init__()

        filepath = Path(__file__).parent.resolve()
        filepath = Path.joinpath(filepath, 'LOGIN.ui')
        # Load the ui file
        uic.loadUi(filepath,self)

        self.email = self.findChild(QLineEdit, 'Email')
        self.password = self.findChild(QLineEdit, 'Password')
        self.signin = self.findChild(QPushButton, 'SignIN')
        self.register = self.findChild(QPushButton, 'Register')

        self.signin.clicked.connect(self.signin_handler)
        self.register.clicked.connect(self.register_handler)



    def signin_handler(self):
        email = self.email.text()
        password = self.password.text()
        #print(email,password)
        #TODO: fetch password for username

        global loggedInUserMailId
       
        q ="SELECT password FROM userinfo WHERE email = %s"
        mycur.execute(q,(email,))
        #mycur.execute(q)
        passcheck=mycur.fetchall()
        print(passcheck)
        if passcheck :
            passwordSaved = passcheck[0][0]
            print (passwordSaved)
            if passwordSaved == password:
                #print(password)
                #      compare password with queried password
                #      grant access on match
                #      open ui window for next screen
                self.main_window = Ui_MainWindow(email)
                print(email+"login")
                self.main_window.parent = self
                self.main_window.show()
                self.hide()
                pass
            else:
                msgBox = QMessageBox()
                msgBox.setText("User name/Password entered in incorrect. Please enter valid credentials. Create new account in case not already registered")
                msgBox.exec()
        else:
            msgBox = QMessageBox()
            msgBox.setText("User is not registered. Please Create new account")
            msgBox.exec()


    def register_handler(self):
        print("wanna register???")
        self.signup_window = Ui_SignupWindow()
        self.signup_window.show()



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ui = Ui_LoginWindow()
    ui.show()
    sys.exit(app.exec_())
